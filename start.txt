$ . setup_turtlebot.sh

$ colcon build --symlink-install

$ ros2 launch object_detection object_detection_launch.py 

1. motor->
$ ros2 launch turtlebot3_bringup robot.launch.py 

2. detect lane
$ ros2 launch detect_lane detect_lane_launch.py calibration:=True/False

2.1 single lane: data: 0(dual) 1(yellow) 2 (white)
$ ros2 topic pub -1 /detect/lane_mode std_msgs/Int64 "{data: 1}"

3. core -> start first 
$ ros2 run core core

4. control lane -> after core
$ ros2 run control control_auto_avoidance

5. traffic light
5.1 topic pub
$ ros2 topic pub -1 /detect/traffic_light std_msgs/String "{data: GREEN}"

5.2 detect traffic light
$ ros2 launch detect_lane detect_traffic_launch.py calibration:=True/False

6 change domain id
$ export ROS_DOMAIN_ID=15

7 install sudo
 . setup_turtlebot.sh 
 
8 cartographer
ros2 launch turtlebot3_cartographer cartographer.launch.py

9 savemap
ros2 run nav2_map_server map_saver_cli -f ~/map
ros2 run nav2_map_server map_saver_cli -f ~/work/map


10navigation2
ros2 launch turtlebot3_navigation2 navigation2.launch.py map:=$HOME/map.yaml
ros2 launch turtlebot3_navigation2 navigation2.launch.py map:=$HOME/work/map.yaml

 ls /dev/ttyACM0
 ros2 run control control_lane
 ros2 run teleop_twist_keyboard teleop_twist_keyboard
colcon build --symlink-install
ros2 run detect_lane key_pub_signs 





ros2 topic list


ros2 launch turtlebot3_navigation2 navigation2.launch.py map:=$HOME/map.yaml

ros2 run turtlebot3_teleop teleop_keyboard




